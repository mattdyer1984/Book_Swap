{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Desktop/23-pterodactyls-book-swap-fe/src/components/ClaimedBookPage/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; // Import the Link component\nimport BookCard from '../BookCard';\nimport GenreFilter from '../GenreFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClaimedBookPage() {\n  _s();\n  const [claimedBooks, setClaimedBooks] = useState([]);\n  const [claimedGenreID, setClaimedGenreID] = useState(0);\n  useEffect(() => {\n    if (claimedGenreID > 0) {\n      fetch('https://book-swap-api.dev.io-academy.uk/api/books?claimed=1' + '&genre=' + claimedGenreID).then(res => res.json()).then(bookData => {\n        setClaimedBooks(bookData.data);\n      });\n    } else {\n      fetch('https://book-swap-api.dev.io-academy.uk/api/books?claimed=1').then(res => res.json()).then(bookData => {\n        setClaimedBooks(bookData.data);\n      });\n    }\n  }, [claimedGenreID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(GenreFilter, {\n        claimedGenreID: claimedGenreID,\n        setGenreID: setClaimedGenreID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_container\",\n      children: claimedBooks.map((book, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/Book/${book.id}`,\n        children: /*#__PURE__*/_jsxDEV(BookCard, {\n          book: book\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(ClaimedBookPage, \"Q9Gsmsk/d2chcH6SV5KOvmSvOeU=\");\n_c = ClaimedBookPage;\nexport default ClaimedBookPage;\nvar _c;\n$RefreshReg$(_c, \"ClaimedBookPage\");","map":{"version":3,"names":["React","useEffect","useState","Link","BookCard","GenreFilter","jsxDEV","_jsxDEV","ClaimedBookPage","_s","claimedBooks","setClaimedBooks","claimedGenreID","setClaimedGenreID","fetch","then","res","json","bookData","data","children","className","setGenreID","fileName","_jsxFileName","lineNumber","columnNumber","map","book","index","to","id","_c","$RefreshReg$"],"sources":["/Users/matt/Desktop/23-pterodactyls-book-swap-fe/src/components/ClaimedBookPage/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; // Import the Link component\nimport BookCard from '../BookCard';\nimport GenreFilter from '../GenreFilter';\n\nfunction ClaimedBookPage() {\n    const [claimedBooks, setClaimedBooks] = useState([]);\n    const [claimedGenreID, setClaimedGenreID] = useState(0)\n\n\n    useEffect(() => {\n        \n        if(claimedGenreID > 0){\n            fetch('https://book-swap-api.dev.io-academy.uk/api/books?claimed=1' + '&genre=' + claimedGenreID)\n                .then(res => res.json())\n                .then(bookData => {\n                    setClaimedBooks(bookData.data);\n                })}\n                else{\n                fetch('https://book-swap-api.dev.io-academy.uk/api/books?claimed=1')\n                .then(res => res.json())\n                .then(bookData => {\n                    setClaimedBooks(bookData.data);\n                })\n    \n                }\n    }, [claimedGenreID]);\n\n    return (\n\n        <div>\n        <div className='search-container'>\n        <GenreFilter claimedGenreID={claimedGenreID} setGenreID={setClaimedGenreID}/>\n        </div>\n        <div className='flex_container'>\n            {claimedBooks.map((book, index) => (\n                <Link key={index} to={`/Book/${book.id}`}>\n                    <BookCard book={book} />\n                </Link>\n            ))}\n        </div>\n        </div>\n    );\n}\n\nexport default ClaimedBookPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AACzC,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAGvDD,SAAS,CAAC,MAAM;IAEZ,IAAGW,cAAc,GAAG,CAAC,EAAC;MAClBE,KAAK,CAAC,6DAA6D,GAAG,SAAS,GAAGF,cAAc,CAAC,CAC5FG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,QAAQ,IAAI;QACdP,eAAe,CAACO,QAAQ,CAACC,IAAI,CAAC;MAClC,CAAC,CAAC;IAAA,CAAC,MACC;MACJL,KAAK,CAAC,6DAA6D,CAAC,CACnEC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,QAAQ,IAAI;QACdP,eAAe,CAACO,QAAQ,CAACC,IAAI,CAAC;MAClC,CAAC,CAAC;IAEF;EACZ,CAAC,EAAE,CAACP,cAAc,CAAC,CAAC;EAEpB,oBAEIL,OAAA;IAAAa,QAAA,gBACAb,OAAA;MAAKc,SAAS,EAAC,kBAAkB;MAAAD,QAAA,eACjCb,OAAA,CAACF,WAAW;QAACO,cAAc,EAAEA,cAAe;QAACU,UAAU,EAAET;MAAkB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC,eACNnB,OAAA;MAAKc,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC1BV,YAAY,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BtB,OAAA,CAACJ,IAAI;QAAa2B,EAAE,EAAG,SAAQF,IAAI,CAACG,EAAG,EAAE;QAAAX,QAAA,eACrCb,OAAA,CAACH,QAAQ;UAACwB,IAAI,EAAEA;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADjBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACjB,EAAA,CAtCQD,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AAwCxB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}