{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Desktop/23-pterodactyls-book-swap-fe/src/components/AddBook/GenreDropdown/index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./genre-dropdown.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenreDropdown(props) {\n  _s();\n  const [bookGenres, setBookGenres] = useState([]);\n  function handelInputChange(event, setState) {\n    const newValue = event.target.value;\n    setState(newValue);\n  }\n  useEffect(() => {\n    fetch(\"https://book-swap-api.dev.io-academy.uk/api/genres\").then(res => res.json()).then(data => {\n      setBookGenres(data.data);\n      console.log(data.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"genre\",\n      children: \"Genre (required)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      type: \"input\",\n      name: \"genre\",\n      placeholder: \"None selected\",\n      onChange: e => handelInputChange(e, props.setGenre),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        className: \"dropdown\",\n        value: 0,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), bookGenres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n        className: \"dropdown\",\n        value: genre.id,\n        children: genre.name\n      }, genre.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(GenreDropdown, \"Q6uyzZ3UOsrMAnshYMBrOjnD/rY=\");\n_c = GenreDropdown;\nexport default GenreDropdown;\nvar _c;\n$RefreshReg$(_c, \"GenreDropdown\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","GenreDropdown","props","_s","bookGenres","setBookGenres","handelInputChange","event","setState","newValue","target","value","fetch","then","res","json","data","console","log","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","onChange","e","setGenre","map","genre","id","_c","$RefreshReg$"],"sources":["/Users/matt/Desktop/23-pterodactyls-book-swap-fe/src/components/AddBook/GenreDropdown/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./genre-dropdown.css\";\n\nfunction GenreDropdown(props) {\n  const [bookGenres, setBookGenres] = useState([]);\n\n  function handelInputChange(event, setState) {\n    const newValue = event.target.value;\n    setState(newValue);\n  }\n\n  useEffect(() => {\n    fetch(\"https://book-swap-api.dev.io-academy.uk/api/genres\")\n      .then((res) => res.json())\n      .then((data) => {\n        setBookGenres(data.data);\n        console.log(data.data);\n      });\n  }, []);\n\n  return (\n    <div className=\"dropdown\">\n      <label htmlFor=\"genre\">Genre (required)</label>\n      <select\n        type=\"input\"\n        name=\"genre\"\n        placeholder=\"None selected\"\n        onChange={(e) => handelInputChange(e, props.setGenre)}\n      >\n        <option className=\"dropdown\" value={0}>\n          All\n        </option>\n        {bookGenres.map((genre) => (\n          <option className=\"dropdown\" value={genre.id} key={genre.id}>\n            {genre.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default GenreDropdown;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhD,SAASQ,iBAAiBA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC1C,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAACC,KAAK;IACnCH,QAAQ,CAACC,QAAQ,CAAC;EACpB;EAEAZ,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,oDAAoD,CAAC,CACxDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdX,aAAa,CAACW,IAAI,CAACA,IAAI,CAAC;MACxBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACA,IAAI,CAAC;IACxB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBpB,OAAA;MAAOqB,OAAO,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC/CzB,OAAA;MACE0B,IAAI,EAAC,OAAO;MACZC,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,eAAe;MAC3BC,QAAQ,EAAGC,CAAC,IAAKxB,iBAAiB,CAACwB,CAAC,EAAE5B,KAAK,CAAC6B,QAAQ,CAAE;MAAAX,QAAA,gBAEtDpB,OAAA;QAAQmB,SAAS,EAAC,UAAU;QAACR,KAAK,EAAE,CAAE;QAAAS,QAAA,EAAC;MAEvC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRrB,UAAU,CAAC4B,GAAG,CAAEC,KAAK,iBACpBjC,OAAA;QAAQmB,SAAS,EAAC,UAAU;QAACR,KAAK,EAAEsB,KAAK,CAACC,EAAG;QAAAd,QAAA,EAC1Ca,KAAK,CAACN;MAAI,GADsCM,KAAK,CAACC,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnD,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CArCQF,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAuCtB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}